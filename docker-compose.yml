version: "3.8"

services:
    # Development Environment
    website-dev:
        build:
            context: .
            dockerfile: Dockerfile
            target: runner
        container_name: private-website-dev
        ports:
            - "1000:3000"
        environment:
            - NODE_ENV=development
            - NEXT_TELEMETRY_DISABLED=1
        volumes:
            - ./src:/app/src
            - ./public:/app/public
            - ./package.json:/app/package.json
            - ./next.config.ts:/app/next.config.ts
            - ./tsconfig.json:/app/tsconfig.json
            - ./tailwind.config.js:/app/tailwind.config.js
            - ./postcss.config.js:/app/postcss.config.js
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        profiles:
            - dev
        networks:
            - private-website-network

    # Production Environment
    website-prod:
        build:
            context: .
            dockerfile: Dockerfile
            target: runner
        container_name: private-website-prod
        ports:
            - "1100:80"
        environment:
            - NODE_ENV=production
            - NEXT_TELEMETRY_DISABLED=1
            - PORT=80
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        profiles:
            - prod
        networks:
            - private-website-network

networks:
    private-website-network:
        driver: bridge
        name: private-website-network

volumes:
    node_modules:
        driver: local
